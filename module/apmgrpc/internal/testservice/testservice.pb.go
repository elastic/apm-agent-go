// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testservice.proto

package testservice // import "go.elastic.co/apm/module/apmgrpc/internal/testservice"

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	context "context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccumulateRequest struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulateRequest) Reset()         { *m = AccumulateRequest{} }
func (m *AccumulateRequest) String() string { return proto.CompactTextString(m) }
func (*AccumulateRequest) ProtoMessage()    {}
func (*AccumulateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testservice_6101db31074a6f55, []int{0}
}
func (m *AccumulateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulateRequest.Unmarshal(m, b)
}
func (m *AccumulateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulateRequest.Marshal(b, m, deterministic)
}
func (dst *AccumulateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulateRequest.Merge(dst, src)
}
func (m *AccumulateRequest) XXX_Size() int {
	return xxx_messageInfo_AccumulateRequest.Size(m)
}
func (m *AccumulateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulateRequest proto.InternalMessageInfo

func (m *AccumulateRequest) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AccumulateReply struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulateReply) Reset()         { *m = AccumulateReply{} }
func (m *AccumulateReply) String() string { return proto.CompactTextString(m) }
func (*AccumulateReply) ProtoMessage()    {}
func (*AccumulateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_testservice_6101db31074a6f55, []int{1}
}
func (m *AccumulateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulateReply.Unmarshal(m, b)
}
func (m *AccumulateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulateReply.Marshal(b, m, deterministic)
}
func (dst *AccumulateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulateReply.Merge(dst, src)
}
func (m *AccumulateReply) XXX_Size() int {
	return xxx_messageInfo_AccumulateReply.Size(m)
}
func (m *AccumulateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulateReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulateReply proto.InternalMessageInfo

func (m *AccumulateReply) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*AccumulateRequest)(nil), "go.elastic.co.apm.module.apmgrpc.testservice.AccumulateRequest")
	proto.RegisterType((*AccumulateReply)(nil), "go.elastic.co.apm.module.apmgrpc.testservice.AccumulateReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccumulatorClient is the client API for Accumulator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccumulatorClient interface {
	Accumulate(ctx context.Context, opts ...grpc.CallOption) (Accumulator_AccumulateClient, error)
}

type accumulatorClient struct {
	cc *grpc.ClientConn
}

func NewAccumulatorClient(cc *grpc.ClientConn) AccumulatorClient {
	return &accumulatorClient{cc}
}

func (c *accumulatorClient) Accumulate(ctx context.Context, opts ...grpc.CallOption) (Accumulator_AccumulateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Accumulator_serviceDesc.Streams[0], "/go.elastic.co.apm.module.apmgrpc.testservice.Accumulator/Accumulate", opts...)
	if err != nil {
		return nil, err
	}
	x := &accumulatorAccumulateClient{stream}
	return x, nil
}

type Accumulator_AccumulateClient interface {
	Send(*AccumulateRequest) error
	Recv() (*AccumulateReply, error)
	grpc.ClientStream
}

type accumulatorAccumulateClient struct {
	grpc.ClientStream
}

func (x *accumulatorAccumulateClient) Send(m *AccumulateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *accumulatorAccumulateClient) Recv() (*AccumulateReply, error) {
	m := new(AccumulateReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AccumulatorServer is the server API for Accumulator service.
type AccumulatorServer interface {
	Accumulate(Accumulator_AccumulateServer) error
}

func RegisterAccumulatorServer(s *grpc.Server, srv AccumulatorServer) {
	s.RegisterService(&_Accumulator_serviceDesc, srv)
}

func _Accumulator_Accumulate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AccumulatorServer).Accumulate(&accumulatorAccumulateServer{stream})
}

type Accumulator_AccumulateServer interface {
	Send(*AccumulateReply) error
	Recv() (*AccumulateRequest, error)
	grpc.ServerStream
}

type accumulatorAccumulateServer struct {
	grpc.ServerStream
}

func (x *accumulatorAccumulateServer) Send(m *AccumulateReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *accumulatorAccumulateServer) Recv() (*AccumulateRequest, error) {
	m := new(AccumulateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Accumulator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.elastic.co.apm.module.apmgrpc.testservice.Accumulator",
	HandlerType: (*AccumulatorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Accumulate",
			Handler:       _Accumulator_Accumulate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "testservice.proto",
}

func init() { proto.RegisterFile("testservice.proto", fileDescriptor_testservice_6101db31074a6f55) }

var fileDescriptor_testservice_6101db31074a6f55 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x49, 0x2d, 0x2e,
	0x29, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xd2, 0x49,
	0xcf, 0xd7, 0x4b, 0xcd, 0x49, 0x2c, 0x2e, 0xc9, 0x4c, 0xd6, 0x4b, 0xce, 0xd7, 0x4b, 0x2c, 0xc8,
	0xd5, 0xcb, 0xcd, 0x4f, 0x29, 0xcd, 0x49, 0x05, 0x31, 0xd3, 0x8b, 0x0a, 0x92, 0xf5, 0x90, 0xf4,
	0x28, 0x69, 0x72, 0x09, 0x3a, 0x26, 0x27, 0x97, 0xe6, 0x96, 0xe6, 0x24, 0x96, 0xa4, 0x06, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x30, 0x07, 0x41, 0x38, 0x4a, 0xea, 0x5c, 0xfc, 0xc8, 0x4a, 0x0b, 0x72, 0x2a,
	0xb1, 0x2b, 0x34, 0x5a, 0xc4, 0xc8, 0xc5, 0x0d, 0x57, 0x99, 0x5f, 0x24, 0x34, 0x89, 0x91, 0x8b,
	0x0b, 0xa1, 0x53, 0xc8, 0x5e, 0x8f, 0x14, 0x17, 0xea, 0x61, 0x38, 0x4f, 0xca, 0x96, 0x7c, 0x03,
	0x0a, 0x72, 0x2a, 0x95, 0x18, 0x34, 0x18, 0x0d, 0x18, 0x9d, 0xcc, 0xa3, 0x4c, 0x51, 0x4c, 0xd1,
	0x4f, 0x2c, 0xc8, 0xd5, 0x87, 0x98, 0xa2, 0x0f, 0x35, 0x45, 0x3f, 0x33, 0xaf, 0x24, 0xb5, 0x28,
	0x2f, 0x31, 0x47, 0x1f, 0xc9, 0xb8, 0x24, 0x36, 0x70, 0x30, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xb0, 0xb9, 0xd9, 0xf0, 0x7b, 0x01, 0x00, 0x00,
}
