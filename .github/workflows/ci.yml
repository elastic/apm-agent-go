name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.asciidoc'

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

## Concurrency only allowed in the main branch.
## So old builds running for old commits within the same Pull Request are cancelled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  precheck:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Precheck
        run: make precheck

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        go-version: [oldstable, stable]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Unit tests
        run: make test

  check-update-modules:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Check Update Modules Command
        run: make update-modules

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Integration tests
        run: |
          ./scripts/docker-compose-testing run -T --rm trace-context-harness
          ./scripts/docker-compose-testing up -d --build
          ./scripts/docker-compose-testing run -T --rm go-agent-tests make coverage GOFLAGS=-v

  test-windows:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Unit tests
        run: go test -v ./...

  test-macos:
    runs-on: macos-12
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Unit tests
        run: make test

  # Very last job to create a GitHub check with the status. This is handy to centralise the
  # GitHub check validation in the Branch protection and to support the ci-docs.yml
  ci:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - check-update-modules
      - precheck
      - test
      - test-macos
      - test-windows
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.isSuccess }}
